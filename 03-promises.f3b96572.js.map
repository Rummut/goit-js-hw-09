{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAItC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAS,C,SAAEJ,E,MAAUC,GAAQ,GAE9BA,EAAM,G,CAIbL,EAAOY,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBAEF,MAAMC,EAAYC,OAAOhB,EAAOiB,SAASC,KAAKC,OAC9C,IAAIC,EAAaJ,OAAOhB,EAAOiB,SAASZ,MAAMc,OAC9C,MAAME,EAAcL,OAAOhB,EAAOiB,SAASK,OAAOH,OAElD,IAAK,IAAII,EAAI,EAAGA,GAAKF,EAAaE,IAChCH,GAAcL,EACdZ,EAAcoB,EAAGH,GACdI,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA2B,OAAOC,QAAQ,uBAAqBtB,QAAiBC,MAAU,IAEhEsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA2B,OAAOG,QAAQ,sBAAoBxB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\n// const delay = setTimeout(() => { setInterval(() => { }, inputStep) }, inputDelay)\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, rejected) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        rejected({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', submitOn);\n\nfunction submitOn(e) {\n  e.preventDefault();\n\n  const inputStep = Number(formEl.elements.step.value);\n  let inputDelay = Number(formEl.elements.delay.value);\n  const inputAmount = Number(formEl.elements.amount.value);\n\n  for (let i = 1; i <= inputAmount; i++) {\n    inputDelay += inputStep;\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","rejected","setTimeout","Math","random","addEventListener","e","preventDefault","inputStep","Number","elements","step","value","inputDelay","inputAmount","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.f3b96572.js.map"}